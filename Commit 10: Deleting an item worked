const path = require('path');
const express = require('express');
const ejs = require('ejs');
const bodyParser = require('body-parser');
const mysql = require('mysql');
const app = express();

const connection=mysql.createConnection({
    host:'localhost',
    user:'root',
    password:'password',
    database:'inventory'
});

connection.connect(function(error){
    if(!!error) console.log(error);
    else console.log('Database Connected!');
}); 

app.set('views',path.join(__dirname,'views'));
app.set('view engine', 'ejs');
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));

app.listen(3000, () => console.log('Express server is runnig at port no : 3000'));

app.get('/',(req, res) => {
    let sql = "SELECT * FROM inventory.items";
    let query = connection.query(sql, (err, rows) => {
        if(err) throw err;
        res.render('user_interface', {
            title : 'CRUD',
            items : rows
        });
    });
});

app.get('/add',(req, res) => {
    res.render('add_item', {
        title : 'CRUD Operation using NodeJS / ExpressJS / MySQL'
    });
});

app.post('/save',(req, res) => { 
    let data = {name: req.body.name, qty: req.body.qty, amount: req.body.amount};
    let sql = "INSERT INTO items SET ?";
    let query = connection.query(sql, data,(err, results) => {
      if(err) throw err;
      res.redirect('/');
    });
});

app.get('/edit/:itemId',(req, res) => {
    const itemId = req.params.itemId;
    let sql = `SELECT * FROM inventory.items where id = ${itemId}`;
    let query = connection.query(sql,(err, result) => {
        if(err) throw err;
        res.render('update_item', {
            title : 'CRUD Operation using NodeJS / ExpressJS / MySQL',
            items : result[0]
        });
    });
});
 
app.post('/update',(req, res) => {
    const itemId = req.body.id;
    let sql = "UPDATE inventory.items SET name='"+req.body.name+"',  qty='"+req.body.qty+"',  amount='"+req.body.amount+"' where id ="+itemId;
    let query = connection.query(sql,(err, results) => {
      if(err) throw err;
      res.redirect('/');
    });
});

app.get('/delete/:itemId',(req, res) => {
    const itemId = req.params.itemId;
    let sql = `DELETE FROM inventory.items where id = ${itemId}`;
    let query = connection.query(sql,(err, result) => {
        res.redirect('/');
    });
});
